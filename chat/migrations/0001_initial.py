# Generated by Django 4.2.8 on 2024-01-03 11:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_time', models.DateTimeField(blank=True, null=True, verbose_name='阅读到的时间')),
                ('active_time', models.DateTimeField(blank=True, null=True, verbose_name='会话内消息最后更新的时间(只有普通会话需要维护，全员会话不需要维护)')),
                ('last_msg_id', models.BigIntegerField(null=True, verbose_name='会话最新消息id')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '会话列表',
                'db_table': 'chat_contact',
            },
        ),
        migrations.CreateModel(
            name='GroupMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.IntegerField(verbose_name='成员角色 1群主 2管理员 3普通成员')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '群成员表',
                'db_table': 'chat_group_member',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(blank=True, max_length=1024, null=True, verbose_name='消息内容')),
                ('reply_msg_id', models.BigIntegerField(blank=True, null=True, verbose_name='回复的消息内容')),
                ('status', models.IntegerField(choices=[(0, '正常'), (1, '删除')], verbose_name='消息状态 0正常 1删除')),
                ('gap_count', models.IntegerField(blank=True, null=True, verbose_name='与回复的消息间隔多少条')),
                ('type', models.IntegerField(choices=[(1, '正常文本'), (2, '撤回消息')], default=1, verbose_name='消息类型 1正常文本 2.撤回消息')),
                ('extra', models.JSONField(blank=True, null=True, verbose_name='扩展信息')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '消息表',
                'db_table': 'chat_message',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, '群聊'), (2, '单聊')], verbose_name='房间类型')),
                ('hot_flag', models.IntegerField(choices=[(0, '否'), (1, '是')], default=0, verbose_name='是否全员展示')),
                ('active_time', models.DateTimeField(blank=True, null=True, verbose_name='群最后消息的更新时间（热点群不需要写扩散，只更新这里）')),
                ('last_msg_id', models.BigIntegerField(null=True, verbose_name='会话中的最后一条消息id')),
                ('ext_json', models.JSONField(blank=True, null=True, verbose_name='额外信息（根据不同类型房间有不同存储的东西）')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '房间表',
                'db_table': 'chat_room',
            },
        ),
        migrations.CreateModel(
            name='RoomGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, verbose_name='群名称')),
                ('avatar', models.CharField(max_length=256, verbose_name='群头像')),
                ('ext_json', models.JSONField(blank=True, null=True, verbose_name='额外信息（根据不同类型房间有不同存储的东西）')),
                ('delete_status', models.IntegerField(choices=[(0, '正常'), (1, '删除')], default=0, verbose_name='逻辑删除(0-正常,1-删除)')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('room', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='chat.room', verbose_name='房间id')),
            ],
            options={
                'verbose_name': '群聊房间表',
                'db_table': 'chat_room_group',
            },
        ),
        migrations.CreateModel(
            name='RoomFriend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_key', models.CharField(max_length=64, unique=True, verbose_name='房间key由两个uid拼接，先做排序uid1_uid2')),
                ('status', models.IntegerField(choices=[(0, '正常'), (1, '禁止')], verbose_name='房间状态 0正常 1禁用(删好友了禁用)')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('room', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='chat.room', verbose_name='房间id')),
                ('uid1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='small_user', to=settings.AUTH_USER_MODEL, verbose_name='id小的用户')),
                ('uid2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='big_user', to=settings.AUTH_USER_MODEL, verbose_name='id大的用户')),
            ],
            options={
                'verbose_name': '单聊房间表',
                'db_table': 'chat_room_friend',
            },
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['create_time'], name='chat_room_create__75dbde_idx'),
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['update_time'], name='chat_room_update__a75920_idx'),
        ),
        migrations.AddField(
            model_name='message',
            name='from_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_sender', to=settings.AUTH_USER_MODEL, verbose_name='消息发送者'),
        ),
        migrations.AddField(
            model_name='message',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chat.room', verbose_name='会话表id'),
        ),
        migrations.AddField(
            model_name='groupmember',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chat.roomgroup', verbose_name='群组'),
        ),
        migrations.AddField(
            model_name='groupmember',
            name='uid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_member_user', to=settings.AUTH_USER_MODEL, verbose_name='成员uid'),
        ),
        migrations.AddField(
            model_name='contact',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chat.room', verbose_name='房间id'),
        ),
        migrations.AddField(
            model_name='contact',
            name='uid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_contact_user', to=settings.AUTH_USER_MODEL, verbose_name='uid'),
        ),
        migrations.AddIndex(
            model_name='roomgroup',
            index=models.Index(fields=['room'], name='chat_room_g_room_id_9e6d68_idx'),
        ),
        migrations.AddIndex(
            model_name='roomgroup',
            index=models.Index(fields=['create_time'], name='chat_room_g_create__96a020_idx'),
        ),
        migrations.AddIndex(
            model_name='roomgroup',
            index=models.Index(fields=['update_time'], name='chat_room_g_update__2c58a9_idx'),
        ),
        migrations.AddIndex(
            model_name='roomfriend',
            index=models.Index(fields=['room'], name='chat_room_f_room_id_faebfb_idx'),
        ),
        migrations.AddIndex(
            model_name='roomfriend',
            index=models.Index(fields=['create_time'], name='chat_room_f_create__620cbf_idx'),
        ),
        migrations.AddIndex(
            model_name='roomfriend',
            index=models.Index(fields=['update_time'], name='chat_room_f_update__210deb_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['room'], name='chat_messag_room_id_cee780_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['from_user'], name='chat_messag_from_us_b96a4f_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['create_time'], name='chat_messag_create__f767cb_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['update_time'], name='chat_messag_update__89d993_idx'),
        ),
        migrations.AddIndex(
            model_name='groupmember',
            index=models.Index(fields=['group', 'role'], name='chat_group__group_i_3cbd37_idx'),
        ),
        migrations.AddIndex(
            model_name='groupmember',
            index=models.Index(fields=['create_time'], name='chat_group__create__3af994_idx'),
        ),
        migrations.AddIndex(
            model_name='groupmember',
            index=models.Index(fields=['update_time'], name='chat_group__update__d41b7e_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['room', 'read_time'], name='chat_contac_room_id_a64184_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['create_time'], name='chat_contac_create__895ee5_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['update_time'], name='chat_contac_update__1a819c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='contact',
            unique_together={('uid', 'room')},
        ),
    ]
